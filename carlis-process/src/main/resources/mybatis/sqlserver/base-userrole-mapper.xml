<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.flym.carlis.persistence.mapper.BaseUserroleMapper" >
  <resultMap id="BaseResultMap" type="xyz.flym.carlis.persistence.domain.BaseUserrole" >
    <id column="UserRole_ID" property="userroleId" jdbcType="NVARCHAR" />
    <result column="User_ID" property="userId" jdbcType="NVARCHAR" />
    <result column="Roles_ID" property="rolesId" jdbcType="NVARCHAR" />
    <result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="CreateUserId" property="createuserid" jdbcType="NVARCHAR" />
    <result column="CreateUserName" property="createusername" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    UserRole_ID, User_ID, Roles_ID, CreateDate, CreateUserId, CreateUserName
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from base_userrole
    where UserRole_ID = #{userroleId,jdbcType=NVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from base_userrole
    where UserRole_ID = #{userroleId,jdbcType=NVARCHAR}
  </delete>
  <insert id="insert" parameterType="xyz.flym.carlis.persistence.domain.BaseUserrole" >
    insert into base_userrole (UserRole_ID, User_ID, Roles_ID, 
      CreateDate, CreateUserId, CreateUserName
      )
    values (#{userroleId,jdbcType=NVARCHAR}, #{userId,jdbcType=NVARCHAR}, #{rolesId,jdbcType=NVARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{createuserid,jdbcType=NVARCHAR}, #{createusername,jdbcType=NVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.flym.carlis.persistence.domain.BaseUserrole" >
    insert into base_userrole
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userroleId != null" >
        UserRole_ID,
      </if>
      <if test="userId != null" >
        User_ID,
      </if>
      <if test="rolesId != null" >
        Roles_ID,
      </if>
      <if test="createdate != null" >
        CreateDate,
      </if>
      <if test="createuserid != null" >
        CreateUserId,
      </if>
      <if test="createusername != null" >
        CreateUserName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userroleId != null" >
        #{userroleId,jdbcType=NVARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=NVARCHAR},
      </if>
      <if test="rolesId != null" >
        #{rolesId,jdbcType=NVARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createuserid != null" >
        #{createuserid,jdbcType=NVARCHAR},
      </if>
      <if test="createusername != null" >
        #{createusername,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.flym.carlis.persistence.domain.BaseUserrole" >
    update base_userrole
    <set >
      <if test="userId != null" >
        User_ID = #{userId,jdbcType=NVARCHAR},
      </if>
      <if test="rolesId != null" >
        Roles_ID = #{rolesId,jdbcType=NVARCHAR},
      </if>
      <if test="createdate != null" >
        CreateDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createuserid != null" >
        CreateUserId = #{createuserid,jdbcType=NVARCHAR},
      </if>
      <if test="createusername != null" >
        CreateUserName = #{createusername,jdbcType=NVARCHAR},
      </if>
    </set>
    where UserRole_ID = #{userroleId,jdbcType=NVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.flym.carlis.persistence.domain.BaseUserrole" >
    update base_userrole
    set User_ID = #{userId,jdbcType=NVARCHAR},
      Roles_ID = #{rolesId,jdbcType=NVARCHAR},
      CreateDate = #{createdate,jdbcType=TIMESTAMP},
      CreateUserId = #{createuserid,jdbcType=NVARCHAR},
      CreateUserName = #{createusername,jdbcType=NVARCHAR}
    where UserRole_ID = #{userroleId,jdbcType=NVARCHAR}
  </update>
</mapper>