<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.flym.carlis.persistence.mapper.SearchIndexMapper" >
  <resultMap id="BaseResultMap" type="xyz.flym.carlis.persistence.domain.SearchIndex" >
    <id column="search_index_list_id" property="searchIndexListId" jdbcType="INTEGER" />
    <result column="region_id" property="regionId" jdbcType="INTEGER" />
    <result column="scenic_spot_count" property="scenicSpotCount" jdbcType="INTEGER" />
    <result column="landscape_count" property="landscapeCount" jdbcType="INTEGER" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="modified_on" property="modifiedOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    search_index_list_id, region_id, scenic_spot_count, landscape_count, created_on, 
    modified_on
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from search_index
    where search_index_list_id = #{searchIndexListId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from search_index
    where search_index_list_id = #{searchIndexListId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xyz.flym.carlis.persistence.domain.SearchIndex" >
    insert into search_index (search_index_list_id, region_id, scenic_spot_count, 
      landscape_count, created_on, modified_on
      )
    values (#{searchIndexListId,jdbcType=INTEGER}, #{regionId,jdbcType=INTEGER}, #{scenicSpotCount,jdbcType=INTEGER}, 
      #{landscapeCount,jdbcType=INTEGER}, #{createdOn,jdbcType=TIMESTAMP}, #{modifiedOn,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.flym.carlis.persistence.domain.SearchIndex" >
    insert into search_index
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="searchIndexListId != null" >
        search_index_list_id,
      </if>
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="scenicSpotCount != null" >
        scenic_spot_count,
      </if>
      <if test="landscapeCount != null" >
        landscape_count,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="modifiedOn != null" >
        modified_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="searchIndexListId != null" >
        #{searchIndexListId,jdbcType=INTEGER},
      </if>
      <if test="regionId != null" >
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="scenicSpotCount != null" >
        #{scenicSpotCount,jdbcType=INTEGER},
      </if>
      <if test="landscapeCount != null" >
        #{landscapeCount,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedOn != null" >
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.flym.carlis.persistence.domain.SearchIndex" >
    update search_index
    <set >
      <if test="regionId != null" >
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="scenicSpotCount != null" >
        scenic_spot_count = #{scenicSpotCount,jdbcType=INTEGER},
      </if>
      <if test="landscapeCount != null" >
        landscape_count = #{landscapeCount,jdbcType=INTEGER},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedOn != null" >
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where search_index_list_id = #{searchIndexListId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.flym.carlis.persistence.domain.SearchIndex" >
    update search_index
    set region_id = #{regionId,jdbcType=INTEGER},
      scenic_spot_count = #{scenicSpotCount,jdbcType=INTEGER},
      landscape_count = #{landscapeCount,jdbcType=INTEGER},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP}
    where search_index_list_id = #{searchIndexListId,jdbcType=INTEGER}
  </update>
</mapper>