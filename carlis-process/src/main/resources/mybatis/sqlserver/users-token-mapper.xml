<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.flym.carlis.persistence.mapper.UsersTokenMapper" >
  <resultMap id="BaseResultMap" type="xyz.flym.carlis.persistence.domain.UsersToken" >
    <id column="user_token_id" property="userTokenId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="refresh_token" property="refreshToken" jdbcType="VARCHAR" />
    <result column="expired_time" property="expiredTime" jdbcType="TIMESTAMP" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_token_id, user_id, token, refresh_token, expired_time, created_on
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users_token
    where user_token_id = #{userTokenId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users_token
    where user_token_id = #{userTokenId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xyz.flym.carlis.persistence.domain.UsersToken" >
    insert into users_token (user_token_id, user_id, token, 
      refresh_token, expired_time, created_on
      )
    values (#{userTokenId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{refreshToken,jdbcType=VARCHAR}, #{expiredTime,jdbcType=TIMESTAMP}, #{createdOn,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.flym.carlis.persistence.domain.UsersToken" >
    insert into users_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userTokenId != null" >
        user_token_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="refreshToken != null" >
        refresh_token,
      </if>
      <if test="expiredTime != null" >
        expired_time,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userTokenId != null" >
        #{userTokenId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null" >
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null" >
        #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.flym.carlis.persistence.domain.UsersToken" >
    update users_token
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null" >
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null" >
        expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_token_id = #{userTokenId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.flym.carlis.persistence.domain.UsersToken" >
    update users_token
    set user_id = #{userId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      created_on = #{createdOn,jdbcType=TIMESTAMP}
    where user_token_id = #{userTokenId,jdbcType=INTEGER}
  </update>
</mapper>